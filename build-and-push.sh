#!/bin/bash
# ุณูุฑูุจุช ูุจูุงุก ูุฑูุน ุตูุฑุฉ Docker ูุชุทุจูู ุฐูู
# Author: Claude 3.7 Sonnet
# Version: 1.0
# Date: 2024

# ุฃููุงู ููุฅุฎุฑุงุฌ
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${BLUE}=== ุจุฏุก ุนูููุฉ ุจูุงุก ููุดุฑ ุชุทุจูู ุฐูู ===${NC}"

# ุชุญูู ูู ูุฌูุฏ Docker
if ! command -v docker &> /dev/null; then
    echo -e "${RED}โ Docker ุบูุฑ ูุซุจุช. ุงูุฑุฌุงุก ุชุซุจูุช Docker ุฃููุงู.${NC}"
    exit 1
fi

# ุชุนููู ุงููุชุบูุฑุงุช
IMAGE_NAME="faisalanqoudi/dhaki"
IMAGE_TAG="latest"
FULL_IMAGE_NAME="${IMAGE_NAME}:${IMAGE_TAG}"

echo -e "${YELLOW}๐ฆ ุฌุงุฑู ุจูุงุก ุตูุฑุฉ Docker: ${FULL_IMAGE_NAME}${NC}"

# ุจูุงุก ุตูุฑุฉ Docker
docker build -t ${FULL_IMAGE_NAME} .

# ุงูุชุญูู ูู ูุฌุงุญ ุงูุจูุงุก
if [ $? -ne 0 ]; then
    echo -e "${RED}โ ูุดู ูู ุจูุงุก ุตูุฑุฉ Docker.${NC}"
    exit 1
fi

echo -e "${GREEN}โ ุชู ุจูุงุก ุตูุฑุฉ Docker ุจูุฌุงุญ!${NC}"

# ุณุคุงู ุงููุณุชุฎุฏู ุนูุง ุฅุฐุง ูุงู ูุฑูุฏ ุฏูุน ุงูุตูุฑุฉ ุฅูู Docker Hub
echo -e "${YELLOW}ูู ุชุฑูุฏ ุฏูุน ุงูุตูุฑุฉ ุฅูู Docker Hubุ (y/n)${NC}"
read -r response

if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
    echo -e "${YELLOW}๐ ุฌุงุฑู ุชุณุฌูู ุงูุฏุฎูู ุฅูู Docker Hub...${NC}"
    docker login

    # ุงูุชุญูู ูู ูุฌุงุญ ุชุณุฌูู ุงูุฏุฎูู
    if [ $? -ne 0 ]; then
        echo -e "${RED}โ ูุดู ูู ุชุณุฌูู ุงูุฏุฎูู ุฅูู Docker Hub.${NC}"
        exit 1
    fi

    echo -e "${YELLOW}๐ค ุฌุงุฑู ุฏูุน ุงูุตูุฑุฉ ุฅูู Docker Hub...${NC}"
    docker push ${FULL_IMAGE_NAME}

    # ุงูุชุญูู ูู ูุฌุงุญ ุงูุฏูุน
    if [ $? -ne 0 ]; then
        echo -e "${RED}โ ูุดู ูู ุฏูุน ุงูุตูุฑุฉ ุฅูู Docker Hub.${NC}"
        exit 1
    fi

    echo -e "${GREEN}โ ุชู ุฏูุน ุงูุตูุฑุฉ ุจูุฌุงุญ ุฅูู Docker Hub!${NC}"
    echo -e "${BLUE}๐ ูููู ุงููุตูู ุฅูู ุงูุตูุฑุฉ ุงูุขู ุนุจุฑ: ${FULL_IMAGE_NAME}${NC}"
fi

# ุณุคุงู ุงููุณุชุฎุฏู ุนูุง ุฅุฐุง ูุงู ูุฑูุฏ ุงุฎุชุจุงุฑ ุงูุตูุฑุฉ ูุญูููุง
echo -e "${YELLOW}ูู ุชุฑูุฏ ุงุฎุชุจุงุฑ ุงูุตูุฑุฉ ูุญูููุงุ (y/n)${NC}"
read -r response

if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
    CONTAINER_NAME="dhaki-app-test"
    PORT="3000"
    
    # ุฅููุงู ูุฅุฒุงูุฉ ุงูุญุงููุฉ ุฅุฐุง ูุงูุช ููุฌูุฏุฉ
    docker stop ${CONTAINER_NAME} 2>/dev/null
    docker rm ${CONTAINER_NAME} 2>/dev/null
    
    echo -e "${YELLOW}๐ ุฌุงุฑู ุชุดุบูู ุตูุฑุฉ Docker ูุญูููุง ุนูู ุงููููุฐ ${PORT}...${NC}"
    docker run -d -p ${PORT}:3000 --name ${CONTAINER_NAME} ${FULL_IMAGE_NAME}
    
    # ุงูุชุญูู ูู ูุฌุงุญ ุงูุชุดุบูู
    if [ $? -ne 0 ]; then
        echo -e "${RED}โ ูุดู ูู ุชุดุบูู ุตูุฑุฉ Docker ูุญูููุง.${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}โ ุชู ุชุดุบูู ุงูุตูุฑุฉ ุจูุฌุงุญ ูุญูููุง!"
    echo -e "๐ ููููู ุงููุตูู ุฅูู ุงูุชุทุจูู ุนุจุฑ: http://localhost:${PORT}${NC}"
    
    echo -e "${BLUE}๐ ูุนูููุงุช ุงูุญุงููุฉ:${NC}"
    docker ps --filter "name=${CONTAINER_NAME}"
fi

echo -e "${GREEN}โจ ุงูุชููุช ุงูุนูููุฉ ุจูุฌุงุญ!${NC}"
echo -e "${BLUE}๐ ูุนุฑุถ ุณุฌูุงุช ุงูุชุทุจูู: ${YELLOW}docker logs dhaki-app-test${NC}"
echo -e "${BLUE}๐ ูุฅููุงู ุงูุชุทุจูู: ${YELLOW}docker stop dhaki-app-test${NC}"
echo -e "${BLUE}๐ ูุฅุนุงุฏุฉ ุชุดุบูู ุงูุชุทุจูู: ${YELLOW}docker restart dhaki-app-test${NC}"

echo -e "${BLUE}=== ููุชุดุบูู ุนูู ุงูุฎุงุฏู VPS === ${NC}"
echo -e "${YELLOW}docker pull ${FULL_IMAGE_NAME}${NC}"
echo -e "${YELLOW}docker run -d -p 3000:3000 --name dhaki-app --restart unless-stopped ${FULL_IMAGE_NAME}${NC}"

# ุงูููุงูุฉ
exit 0 